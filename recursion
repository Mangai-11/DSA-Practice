========================
//Question 1 - print 1 to n
==========================
class Solution {
    public void printNos(int n) {
        // Code here
        if(n==0){
            return ;
        }
   
         printNos(n-1);
        System.out.print(n+" ");
    }
}

class Main {
    public static void main(String[] args) {
    Solution obj=new Solution();
    int n=10;
    obj.printNos(n);
    }
}
=================================
//Question 2- sum of numbers
================================
class solution{
      public int sum(int n){
    if(n==0){
        return 0;
    }
   return n+sum(n-1);
}

    public static void main(String[] args){
        int n=5;
        solution obj=new solution();
        int res=obj.sum(n);
        System.out.print(res);
    }
}
==================================
//Question 3 -fibonacci
================================
class solution {
    public int nthFibonacci(int n) {
        // code here
        if(n==1){
            return 1;
        }
        else if(n==0){
            return 0;
        }
        return nthFibonacci(n-1)+nthFibonacci(n-2);
    }

    public static void main(String[] args){
        int n=6;
        solution obj=new solution();
        int res=obj.nthFibonacci(n);
        System.out.print(res);
    }
}
===============================
//Question 4 - count zeros in no
=============================
class soln{
    public int countzero(int n){
        if(n%10==n){//test for single digit
            if(n==0){
                return 1;
            }
            else{
                return 0;
            }
        }
        if(n%10==0){
        return 1;
    }
        else{
        return 0;
    }
        }
    if(n%10==0){
     return 1+countzero(n/10);}
    else {
      return countzero(n/10);}
}
    public static void main(String[] args){
        int n=2030;
        soln obj=new soln();
        int res=obj.countzero(n);
        System.out.print(res);
    }
}
============================
//Question 5-count digits in no
===========================
class soln{
    public int countzero(int n){
       if(n==0){
           return 0;
       }
     return 1+countzero(n/10);
    
}
    public static void main(String[] args){
        int n=0;
        soln obj=new soln();
        int res=obj.countzero(n);
        System.out.print(res);
    }
}
=============================
//Question 6 - sum of digits
===========================
class soln{
    public int countsum(int n){
       if(n==0){
           return 0;
       }
     return n%10+countsum(n/10);
    
}
    public static void main(String[] args){
        int n=346;
        soln obj=new soln();
        int res=obj.countsum(n);
        System.out.print(res);
    }
}
========================
//Question 7 print array
==========================
class soln{
    public void printarr(int arr[],int n,int i){
       if(i>=n){
           return ;
       }
   System.out.print(arr[i]);
   i++;
   printarr(arr,n,i);
    
}
    public static void main(String[] args){
        int arr[]={3,6,7,9};
     int n=arr.length;
     soln obj=new soln();
     
       obj. printarr(arr,n,0);
    
    }
}
===================================
//Question 8-sum of array
===================================
class Main{
    public int sumprintarr(int arr[],int n,int i){
       if(i>=n){
           return 0 ;
       }
  return arr[i]+sumprintarr(arr,n,i+1);
}

    public static void main(String[] args){
        int arr[]={3,6,7,9};
     int n=arr.length;
     Main obj=new Main();
     
       int res=obj. sumprintarr(arr,n,0);
       System.out.println(res);
    
    }
}
============================
//Question 9-arr sorted or not
============================
class Main {
    public boolean sort(int arr[], int n, int i) {
        if (i >= n - 1) {
            return true;
        }
        if (arr[i] == arr[i + 1]) {
            return false;
        }
        return sort(arr, n, i + 1);
    }

    public static void main(String[] args) {
        int arr[] = {3, 6, 7, 9};
        int n = arr.length;
        Main obj = new Main();
        boolean result = obj.sort(arr, n, 0);
        System.out.println(result);
    }
}
=========================
//Question 10 - print divisors of no
==========================
public class recursion{
    public static void pd(int n,int i){
        if(i>n){
            return;
        }
        if(n%i==0){
            System.out.print(i+" ");
        }
        pd(n,i+1);
        
    }
    public static void main(String[] args){
        int n=6;
        pd(n,1);
    }
}
=========================
//Question 11 - power of no
==========================
public class Main{
    public static int power(int b,int e){
      if(e==0){
          return 1;
      }
      return b*power(b,e-1);
    }
    public static void main(String[] args){
        int b=6,e=3;
        int res=power(b,e);
        System.out.println(res);
    }
}